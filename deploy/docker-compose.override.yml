# Docker Compose override file for development
# This file is automatically loaded by docker-compose and extends the main docker-compose.yml
# Use this for development-specific configurations

version: '3.8'

services:
  web:
    # Enable development mode with auto-reload
    environment:
      - DJANGO_SETTINGS_MODULE=qu_security.settings
      - PYTHONPATH=/app
    # Mount source code for live reloading during development
    volumes:
      - ..:/app:Z  # :Z for SELinux compatibility
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    # Use Django development server instead of Gunicorn
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    # Enable debugging port (can be used with remote debugger)
    ports:
      - "8000:8000"
      - "5678:5678"  # For debugpy or ptvsd

  celery:
    # Mount source code for live reloading during development
    volumes:
      - ..:/app:Z
      - media_volume:/app/media
    # Enable Celery development settings
    environment:
      - CELERY_WORKER_HIJACK_ROOT_LOGGER=False
      - CELERY_WORKER_LOG_COLOR=True
    # Use development command with auto-reload
    command: celery -A qu_security worker --loglevel=debug --concurrency=2

  celery-beat:
    # Mount source code for development
    volumes:
      - ..:/app:Z
    # Development scheduler settings
    environment:
      - CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers:DatabaseScheduler
    command: celery -A qu_security beat --loglevel=debug

  # Remove nginx from development to access Django directly
  # Comment out the nginx service to disable it
  # nginx:
  #   profiles: ["production"]  # Only start in production profile

volumes:
  static_volume:
  media_volume: