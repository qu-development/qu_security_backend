
services:
  # Main Django application
  web:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: qu_security_web
    ports:
      - "127.0.0.1:1111:8000"
    env_file: ./.env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      memcached:
        condition: service_started
    networks:
      - qu_security_network
  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    command: ["memcached", "-m", "64"] # Allocates 64MB of memory
    restart: unless-stopped
    networks:
      - qu_security_network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qu_security_postgres
    environment:
      POSTGRES_DB: qu_security_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "9432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - qu_security_network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: qu_security_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - qu_security_network

  # RabbitMQ for task queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: qu_security_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: qu_user
      RABBITMQ_DEFAULT_PASS: qu_password
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      - qu_security_network
  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: qu_security_nginx
    volumes:
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - web
    networks:
      - qu_security_network
    ports:
      - 1112:80

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  qu_security_network:
    driver: bridge