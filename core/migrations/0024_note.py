# Generated by Django 5.2.5 on 2025-09-23 21:26

import django.core.validators
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0023_service_total_hours_service_total_hours_planned'),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(help_text='Name or title of the note', max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the note', verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Financial amount - can be positive (income) or negative (expense)', max_digits=12, validators=[django.core.validators.DecimalValidator(decimal_places=2, max_digits=12)], verbose_name='Amount ($)')),
                ('client', models.ForeignKey(blank=True, help_text='Associated client', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.client', verbose_name='Client')),
                ('expense', models.ForeignKey(blank=True, help_text='Associated expense', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.expense', verbose_name='Expense')),
                ('guard', models.ForeignKey(blank=True, help_text='Associated guard', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.guard', verbose_name='Guard')),
                ('guard_property_tariff', models.ForeignKey(blank=True, help_text='Associated guard property tariff', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.guardpropertytariff', verbose_name='Guard Property Tariff')),
                ('property_obj', models.ForeignKey(blank=True, help_text='Associated property', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.property', verbose_name='Property')),
                ('property_type_of_service', models.ForeignKey(blank=True, help_text='Associated property type of service', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.propertytypeofservice', verbose_name='Property Type Of Service')),
                ('service', models.ForeignKey(blank=True, help_text='Associated service', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.service', verbose_name='Service')),
                ('shift', models.ForeignKey(blank=True, help_text='Associated shift', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.shift', verbose_name='Shift')),
                ('weapon', models.ForeignKey(blank=True, help_text='Associated weapon', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='core.weapon', verbose_name='Weapon')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['name'], name='core_note_name_8808d5_idx'), models.Index(fields=['amount'], name='core_note_amount_4016bd_idx'), models.Index(fields=['created_at'], name='core_note_created_3e1589_idx'), models.Index(fields=['client', 'property_obj'], name='core_note_client__bb8309_idx')],
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
