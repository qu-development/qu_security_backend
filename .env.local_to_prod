# Local environment connecting to production database
# Use this to create superuser and manage production DB locally

# Force Django to use production database configuration
AWS_EXECUTION_ENV=AWS_Lambda_python3.11

# Django Configuration
SECRET_KEY=qu-sec-prod-2024-x9k#2m$n5p&q7r*t3u+v4w-x6y!z0a^b%c&d(e)f*g+h-i=j-aurora-v2
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,.execute-api.us-east-2.amazonaws.com

# Production Database (same as Lambda)
RDS_DB_NAME=qu_security_db_prod
RDS_USERNAME=postgres
RDS_PASSWORD=Rylai_BL2711#
RDS_HOSTNAME=qu-security-postgres.cjeaecg2g3iy.us-east-2.rds.amazonaws.com
RDS_PORT=5432

# S3 Configuration (optional for local admin)
USE_S3=False
AWS_STORAGE_BUCKET_NAME=qu-security-static
AWS_S3_REGION_NAME=us-east-2

# Feature flags
# Allow legacy keys ('guard', 'property') in tariffs create payloads (deprecated)
# Set to False to enforce new keys only ('guard_id', 'property_id')
TARIFFS_ALLOW_LEGACY_KEYS=True
